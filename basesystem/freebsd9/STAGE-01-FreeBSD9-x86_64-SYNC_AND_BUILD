#!/bin/sh

BSD_VERSION="RELENG_9_0"
DEFAULT_SOURCE="ftp.at.FreeBSD.org"
CSUP_FILE="/etc/csup"
LOGIN_CONF_FILE="/etc/login.conf"
CSUP_BIN="/usr/bin/csup"
BSDMAKE_BIN="/usr/bin/make"
READ_BIN="/usr/bin/read"
REBOOT_BIN="/sbin/reboot"
PWD_BIN="/bin/pwd"
CP_BIN="/bin/cp"
DATE_BIN="/bin/date"
MKDIR_BIN="/bin/mkdir"
CAP_MKDB="/usr/bin/cap_mkdb"

KERNEL_CONFIG_PATH="/usr/src/sys/amd64/conf/"
PREFILES="$(${PWD_BIN})/prefiles/"
LOG="$(${PWD_BIN})/STAGE-ONE.log"


check_result () {
  if [ "$1" != "0" ]; then
    echo "FAILURE"
    exit 666
  fi
}


# echo "Fetching FreeBSD sources for development server"
# time $CSUP_BIN "${CSUP_FILE}" > "$LOG"

echo "Copying VERKNOWSYS kernel config to ${KERNEL_CONFIG_PATH}"
${CP_BIN} $(${PWD_BIN})/kernel/VerKnowSys ${KERNEL_CONFIG_PATH}VerKnowSys

echo "Building world"
cd /usr/src
time $BSDMAKE_BIN -j4 buildworld >> "$LOG"
check_result $?

time $BSDMAKE_BIN buildkernel KERNCONF=VerKnowSys >> "$LOG"
check_result $?

datenow="$(${DATE_BIN} +"%y_%m_%d-%H_%M_%S")"
oldkernel_dir="/boot/kernel_old_${datenow}"
echo "Making copy of actual kernel to: ${oldkernel_dir}"
${MKDIR_BIN} -p ${oldkernel_dir}
${CP_BIN} -r /boot/kernel ${oldkernel_dir}

echo "Installing kernel"
time $BSDMAKE_BIN installkernel KERNCONF=VerKnowSys >> "$LOG"
check_result $?

echo "Reboot is required to run new kernel, after which You need to execute STAGE-TWO script"
echo "... If you're believer, you may start to pray now."
echo
echo "[Hit Enter to reboot machine]"
${READ_BIN} reply
${REBOOT_BIN}
