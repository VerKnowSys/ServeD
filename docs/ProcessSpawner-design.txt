ProcessSpawner design

A. Launched for user

B. Launching service "Service"
  I. (JDK side):
    0. touch $HOME/SoftwareData/Service/.domain with value of user domain
    1. touch $HOME/SoftwareData/Service/.spawn
    2. wait for $HOME/SoftwareData/Service/.spawned to continue

  II. (PS side):
    0. read "Service.json" igniter, replace values:
        SERVICE_ROOT => obvious (one of two: /Software/Service by default or $HOME/Apps/Service)
        SERVICE_PREFIX => obvious: $HOME/SoftwareData/Service
        SERVICE_DOMAIN => read $HOME/SoftwareData/Service/.domain
        SERVICE_ADDRESS => to resolved IP of SERVICE_DOMAIN
    1. launch cron jobs for service
    2. launch svdshell with Service
    3. remove $HOME/SoftwareData/Service/.spawn
    4. redirect process outputs to $HOME/SoftwareData/Service/.outputs
    5. touch $HOME/SoftwareData/Service/.spawned

  III. (JDK side):
    1. continue work when $HOME/SoftwareData/Service/.spawned is found
    2. (â€¦) optionally read $HOME/SoftwareData/Service/.outputs or do whatever is required


C. Stopping service "Service"
  I. (JDK side):
    1. close service connections (if any)
    2. touch $HOME/SoftwareData/Service/.terminate
  II. (PS side):
    0. stop service
    1. remove $HOME/SoftwareData/Service/.spawned
    2. remove $HOME/SoftwareData/Service/.terminate
